
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jcazvdqmxlzpdwgzlyph.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpjYXp2ZHFteGx6cGR3Z3pseXBoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDUyNDI3MTMsImV4cCI6MjA2MDgxODcxM30.rjGM4Q4k1PzGb4FCOWpcSQOYnYQKw0iCQLBLeugLMGc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true
    }
  }
);

// Add a custom function to check if a column exists in a table
// This is needed because we might be working with a database schema that doesn't have password_salt yet
export const checkColumnExists = async (tableName: string, columnName: string): Promise<boolean> => {
  try {
    const { data, error } = await supabase
      .rpc('check_column_exists', { table_name: tableName, column_name: columnName });
      
    if (error) throw error;
    return !!data;
  } catch (error) {
    console.error(`Error checking if column ${columnName} exists in ${tableName}:`, error);
    return false;
  }
};
